# -*- coding: utf-8 -*-
"""GAN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15mZERCyI9fGhU0Y4nmGmkDr6b2h_yzhJ
"""

#importing dependencies and data

pip install tensorflow tensorflow-gpu matplotlib tensorflow-datasets ipywidgets

pip install --upgrade pip

# Commented out IPython magic to ensure Python compatibility.
# %pip install tensorflow-gpu

pip install tensorflow tensorflow-gpu matplotlib tensorflow-datasets ipywidgets

pip list

import tensorflow as tf
gpus = tf.config.experimental.list_physical_devices('GPU')
for gpu in gpus:
  tf.config.experimental.set_memory_growth(gpu,True)

gpus

for gpu in gpus:
  print (gpu)

# bringing in tensorflow dataset for fashion mnist
import tensorflow_datasets as tfds
# bringing in matplotlib for vis stuff
from matplotlib import pyplot as plt

# use the tesorflow dataset api to bring in the data source
ds = tfds.load('fashion_mnist',split='train')

ds.as_numpy_iterator().next()['label']

"""vis data and build dataset

"""

# do some data transformation
import numpy as np

dataiterator = ds.as_numpy_iterator()

#getting data out of the pipline
dataiterator.next()['image']

#set up the subplot formating
fig,ax = plt.subplots(ncols=4, figsize=(20,20))
# loop four times and get images
for idx in range(4):
  #grab an image and lable
  sample = dataiterator.next()
 #plot a image using a spicific axies
ax[idx].imshow(np.squeeze(sample['image']))
#appending the image label as the plot title
ax[idx].title.set_text(sample['label'])

def scale_images(data):
  image = data['image']
  return image / 255

ds = tfds.load('fashion_mnist',split='train')
ds = ds.map(scale_images)
ds = ds.cache()
ds = ds.shuffle(60000)
ds = ds.batch(128)
ds = ds.prefetch(64)

